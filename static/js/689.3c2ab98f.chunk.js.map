{"version":3,"file":"static/js/689.3c2ab98f.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\"\nconst API_KEY = 'a4cd0ac584d8e9d66ad0a8071503e9b2'\n\nexport const fetchTrandingMovies = async () => {\n  try {\n    return await axios.get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const fetchSearchMovie = async searchQuery => {\n  try {\n    return await axios.get(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1`);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const fetchMovieInfo = async movieId => {\n  try {\n    return await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    return await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const fetchMovieReview = async movieId => {\n  try {\n    return await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n  }catch (err) {\n    console.log(err);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\"};","import { ProgressBar } from 'react-loader-spinner';\nimport css from \"./Loader.module.css\";\n\nconst Loader = () => {\n  return (\n    <div className={css.loaderWrapper}>\n          <ProgressBar\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"progress-bar-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"progress-bar-wrapper\"\n      borderColor=\"#00FFFF\"\n      barColor=\"#7FFF00 \"\n    />\n    </div>\n\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"searchBtn\":\"SearchBar_searchBtn__cdWGi\",\"searchInput\":\"SearchBar_searchInput__S8ff+\",\"searchIcon\":\"SearchBar_searchIcon__QhQBu\",\"formWrapper\":\"SearchBar_formWrapper__I3PPS\"};","import { useState } from 'react';\nimport { MagnifyingGlassIcon } from '@radix-ui/react-icons';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './SearchBar.module.css';\n\nconst SearchBar = ({ onSubmit }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      return toast.warning('Please, enter your query!', {\n        theme: 'colored',\n      });\n    }\n    onSubmit(searchQuery.trim());\n    setSearchQuery(\"\");\n  };\n\n  const handleSearchChange = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  return (\n    <div className={css.formWrapper}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <button type=\"submit\">\n          <MagnifyingGlassIcon className={css.searchIcon} />\n        </button>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movie\"\n          onChange={handleSearchChange}\n          className={css.searchInput}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"Movies_movieList__FD6N4\",\"movieNav\":\"Movies_movieNav__cz6aH\",\"moviePoster\":\"Movies_moviePoster__1Y8Zf\"};","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport Loader from '../../components/Loader/Loader';\nimport { fetchSearchMovie } from '../../api/api';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movieBySearch, setMovieBySearch] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParams = searchParams.get('query') ?? '';\n\n  if (!searchQuery && queryParams) {\n    setSearchQuery(queryParams);\n  }\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    try {\n      setIsLoading(true);\n      const getSearchMovie = async () => {\n        const {\n          data: { results },\n        } = await fetchSearchMovie(queryParams);\n        if (!results.length) {\n          setMovieBySearch([]);\n          setIsLoading(false);\n          toast.error(\n            'Sorry there are no movies matching your search query. Please try again.',\n            {\n              theme: 'colored',\n            }\n          );\n          return;\n        }\n        setMovieBySearch(results);\n        setIsLoading(false);\n      };\n      getSearchMovie();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [searchQuery, queryParams]);\n\n  const handleFormSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setSearchParams({query: searchQuery});\n  };\n\n  return (\n    <div>\n      <SearchBar onSubmit={handleFormSubmit} />\n      {isLoading && <Loader />}\n      {movieBySearch && (\n        <ul className={css.movieList}>\n          {movieBySearch.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }} className={css.movieNav}>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                      : 'https://skydomepictures.com/wp-content/uploads/2018/08/movie-poster-coming-soon-2.png'\n                  }\n                  alt={movie.title}\n                  className={css.moviePoster}\n                />\n                <h2 className={css.movieTitle}>{movie.title}</h2>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchTrandingMovies","axios","console","log","fetchSearchMovie","searchQuery","fetchMovieInfo","movieId","fetchMovieCast","fetchMovieReview","className","css","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","onSubmit","useState","setSearchQuery","e","preventDefault","trim","toast","theme","type","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","movieBySearch","setMovieBySearch","isLoading","setIsLoading","location","useLocation","useSearchParams","searchParams","setSearchParams","queryParams","get","useEffect","getSearchMovie","results","data","length","error","query","Loader","map","movie","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}